(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),l=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=l(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(t),b=r,f=m["".concat(a,".").concat(b)]||m[b]||s[b]||i;return t?o.a.createElement(f,c(c({ref:n},u),{},{components:t})):o.a.createElement(f,c({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=b;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},80:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return l}));var r=t(3),o=t(7),i=(t(0),t(116)),a={id:"ignore",title:"Ignore",sidebar_label:"Ignore"},c={unversionedId:"mapping-configuration/ignore",id:"mapping-configuration/ignore",isDocsHomePage:!1,title:"Ignore",description:"When we want to completely ignore a member on the Destination or to avoid Unmapped Properties error, we can utilize ignore() which does nothing on the member. This ultimately makes the member undefined",source:"@site/docs/mapping-configuration/ignore.md",slug:"/mapping-configuration/ignore",permalink:"/docs/mapping-configuration/ignore",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/mapping-configuration/ignore.md",version:"current",sidebar_label:"Ignore",sidebar:"docs",previous:{title:"NullSubstitution",permalink:"/docs/mapping-configuration/null-substitution"},next:{title:"MapWithArguments",permalink:"/docs/mapping-configuration/map-with-arguments"}},p=[],u={toc:p};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"When we want to completely ignore a member on the ",Object(i.b)("strong",{parentName:"p"},"Destination")," or to avoid ",Object(i.b)("strong",{parentName:"p"},"Unmapped Properties")," error, we can utilize ",Object(i.b)("inlineCode",{parentName:"p"},"ignore()")," which does nothing on the member. This ultimately makes the member ",Object(i.b)("inlineCode",{parentName:"p"},"undefined")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"import { ignore } from '@automapper/core';\n\nmapper\n  .createMap(User, UserDto)\n  .forMember((destination) => destination.fullName, ignore());\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"ignore()")," will set the ",Object(i.b)("inlineCode",{parentName:"p"},"TransformationType")," to ",Object(i.b)("inlineCode",{parentName:"p"},"TransformationType.Ignore")))}l.isMDXComponent=!0}}]);