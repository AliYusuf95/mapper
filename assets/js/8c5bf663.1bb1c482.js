(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{116:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return b}));var t=r(0),a=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),p=function(e){var n=a.a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=p(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},g=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),g=t,b=u["".concat(o,".").concat(g)]||u[g]||d[g]||i;return r?a.a.createElement(b,s(s({ref:n},c),{},{components:r})):a.a.createElement(b,s({ref:n},c))}));function b(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},93:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return o})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return l})),r.d(n,"default",(function(){return p}));var t=r(3),a=r(7),i=(r(0),r(116)),o={id:"extend-plugin",title:"Extend plugin",sidebar_label:"Extend plugin"},s={unversionedId:"plugins-system/extend-plugin",id:"plugins-system/extend-plugin",isDocsHomePage:!1,title:"Extend plugin",description:"In addition to creating your own plugins, you can also extend existing plugins. After all, plugins are just Object.",source:"@site/docs/plugins-system/extend-plugin.md",slug:"/plugins-system/extend-plugin",permalink:"/docs/plugins-system/extend-plugin",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/plugins-system/extend-plugin.md",version:"current",sidebar_label:"Extend plugin",sidebar:"docs",previous:{title:"Create plugin",permalink:"/docs/plugins-system/create-plugin"},next:{title:"NestJS Integration",permalink:"/docs/nestjs"}},l=[],c={toc:l};function p(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},c,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"In addition to ",Object(i.b)("a",{parentName:"p",href:"/docs/plugins-system/create-plugin"},"creating your own plugins"),", you can also ",Object(i.b)("strong",{parentName:"p"},"extend existing plugins"),". After all, plugins are just ",Object(i.b)("inlineCode",{parentName:"p"},"Object"),"."),Object(i.b)("p",null,"The following example shows how to extend ",Object(i.b)("inlineCode",{parentName:"p"},"@automapper/classes")," to convert all ",Object(i.b)("inlineCode",{parentName:"p"},"null")," values to ",Object(i.b)("inlineCode",{parentName:"p"},"undefined")," by customizing ",Object(i.b)("inlineCode",{parentName:"p"},"preMap()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"preMapArray()")," on ",Object(i.b)("inlineCode",{parentName:"p"},"classes")," plugin."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"const customClasses = (errorHandler: ErrorHandler) => {\n  // simple function to check for null and reassign to undefined\n  function nullify(srcObj: Record<string, unknown>) {\n    for (const srcKey in srcObj) {\n      if (srcObj[srcKey] === null) {\n        srcObj[srcKey] = undefined;\n      }\n\n      if (\n        typeof srcObj[srcKey] === 'object' &&\n        !Array.isArray(srcObj[srcKey])\n      ) {\n        nullify(srcObj[srcKey] as Record<string, unknown>);\n      }\n    }\n  }\n\n  // call the original pluginInitializer\n  const originalClasses = classes(errorHandler);\n\n  // grab the original preMap\n  const originalPreMap = originalClasses.preMap;\n\n  // customize the preMap\n  originalClasses.preMap = (...args) => {\n    const originalPreMapResult = originalPreMap(...args);\n    nullify(originalPreMapResult[0]);\n    return originalPreMapResult;\n  };\n\n  // add a custom preMapArray\n  originalClasses.preMapArray = (source, sourceArr) => {\n    return sourceArr.map((srcItem) => {\n      nullify(srcItem);\n      return srcItem;\n    });\n  };\n\n  // return the plugin object\n  return originalClasses;\n};\n")),Object(i.b)("p",null,"With this in place, we can use it like any other plugin."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"const mapper = createMapper({\n  name: 'customClasses',\n  pluginInitializer: customClasses,\n});\n")))}p.isMDXComponent=!0}}]);