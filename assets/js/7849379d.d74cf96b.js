(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return s}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=a.a.createContext({}),u=function(e){var n=a.a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},l=function(e){var n=u(e.components);return a.a.createElement(m.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,s=l["".concat(i,".").concat(b)]||l[b]||f[b]||o;return t?a.a.createElement(s,p(p({ref:n},m),{},{components:t})):a.a.createElement(s,p({ref:n},m))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var m=2;m<o;m++)i[m]=t[m];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(7),o=(t(0),t(116)),i={id:"map-defer",title:"MapDefer",sidebar_label:"MapDefer"},p={unversionedId:"mapping-configuration/map-defer",id:"mapping-configuration/map-defer",isDocsHomePage:!1,title:"MapDefer",description:"mapDefer() is a special type of MemberMapFunction that can be used to defer another MemberMapFunction based on some logic in forMember()",source:"@site/docs/mapping-configuration/map-defer.md",slug:"/mapping-configuration/map-defer",permalink:"/docs/mapping-configuration/map-defer",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/mapping-configuration/map-defer.md",version:"current",sidebar_label:"MapDefer",sidebar:"docs",previous:{title:"MapWithArguments",permalink:"/docs/mapping-configuration/map-with-arguments"},next:{title:"PreCondition",permalink:"/docs/mapping-configuration/pre-condition"}},c=[],m={toc:c};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mapDefer()")," is a special type of ",Object(o.b)("inlineCode",{parentName:"p"},"MemberMapFunction")," that can be used to ",Object(o.b)("em",{parentName:"p"},"defer")," another ",Object(o.b)("inlineCode",{parentName:"p"},"MemberMapFunction")," based on some logic in ",Object(o.b)("inlineCode",{parentName:"p"},"forMember()")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mapDefer()")," accepts a ",Object(o.b)("inlineCode",{parentName:"p"},"deferFunction")," that will be invoked with the ",Object(o.b)("strong",{parentName:"p"},"Source")," object."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"import { mapDefer, convertUsing, fromValue } from '@automapper/core';\n\nmapper.createMap(User, UserDto).forMember(\n  (destination) => destination.fullName,\n  mapDefer((source) => {\n    if (source.someFlag) return fromValue('raw');\n    return convertUsing(fullNameConverter);\n  })\n);\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mapDefer()")," will set the ",Object(o.b)("inlineCode",{parentName:"p"},"TransformationType")," to ",Object(o.b)("inlineCode",{parentName:"p"},"TransformationType.MapDefer")),Object(o.b)("p",null,"If you have ",Object(o.b)("inlineCode",{parentName:"p"},"strict")," mode turned on, you might need to annotate the generics of the ",Object(o.b)("inlineCode",{parentName:"p"},"MemberMapFunction")," like ",Object(o.b)("inlineCode",{parentName:"p"},"convertUsing<User, string>()")))}u.isMDXComponent=!0}}]);