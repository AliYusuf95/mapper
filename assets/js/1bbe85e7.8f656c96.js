(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||a;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(116)),i={id:"limitations",title:"Limitations",sidebar_label:"Limitations"},c={unversionedId:"misc/limitations",id:"misc/limitations",isDocsHomePage:!1,title:"Limitations",description:"Date Time",source:"@site/docs/misc/limitations.md",slug:"/misc/limitations",permalink:"/docs/misc/limitations",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/misc/limitations.md",version:"current",sidebar_label:"Limitations",sidebar:"docs",previous:{title:"ErrorHandler",permalink:"/docs/misc/error-handler"},next:{title:"Introduce to Plugins",permalink:"/docs/plugins-system/introduce-to-plugins"}},s=[{value:"Date Time",id:"date-time",children:[]},{value:"Odd-property name",id:"odd-property-name",children:[{value:"Property name with number or special characters",id:"property-name-with-number-or-special-characters",children:[]}]},{value:"Circular Dependencies",id:"circular-dependencies",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"date-time"},"Date Time"),Object(a.b)("p",null,"When dealing with Date Time, we should utilize Custom Configuration instead of relying on Auto Configuration. Date Time is hard to get right."),Object(a.b)("h2",{id:"odd-property-name"},"Odd-property name"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@automapper/core")," uses the ",Object(a.b)("strong",{parentName:"p"},"Selector")," approach throughout the library which then needs to be parsed to get the property path. For example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const selector = (destination) => destination.foo.bar;\n// or even\nconst selector = (d: IFoo) => d['foo'].bar;\n\n// ES5 version works as well\nfunction selector(destination) {\n  return destination.foo.bar;\n}\n// with computed property names also works\nfunction selector(destination) {\n  return destination['foo'].bar;\n}\n")),Object(a.b)("p",null,"This ",Object(a.b)("inlineCode",{parentName:"p"},"selector")," will be parsed at some point to extract ",Object(a.b)("inlineCode",{parentName:"p"},"foo.bar")," as property path."),Object(a.b)("p",null,"But, for the following cases, the parser won't be able to parse to get the right property path:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const selector = (d) => d[' a ']; // You could use getters to circumvent this one\n\n// Real computed names\nconst selector = (d) => d['fo' + 'o'];\nconst selector = (d) => d[`foo`]; // you cannot use template strings!\nconst selector = (d) => d[`${'foo'}`];\n// and so on...\n")),Object(a.b)("h3",{id:"property-name-with-number-or-special-characters"},"Property name with number or special characters"),Object(a.b)("p",null,"When you rely on ",Object(a.b)("strong",{parentName:"p"},"Naming Convention"),", and your property has number or special characters as part of the property name then the parse won't be able to parse the correct path either. For example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"class SnakeCaseFoo {\n  foo_1: string;\n  foo_bar: number;\n}\n\nclass CamelCaseFooDto {\n  foo1: string;\n  fooBar: number;\n}\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@automapper/core")," will be able to parse ",Object(a.b)("inlineCode",{parentName:"p"},"foo_bar")," into ",Object(a.b)("inlineCode",{parentName:"p"},"fooBar")," but it won't be able to do the same for ",Object(a.b)("inlineCode",{parentName:"p"},"foo_1"),". Please consider manually map these properties."),Object(a.b)("p",null,"PR is most definitely welcomed to fix this limitation."),Object(a.b)("h2",{id:"circular-dependencies"},"Circular Dependencies"),Object(a.b)("p",null,"See ",Object(a.b)("a",{parentName:"p",href:"/docs/plugins-system/classes-limitations"},Object(a.b)("inlineCode",{parentName:"a"},"@automapper/classes")," Limitations")))}p.isMDXComponent=!0}}]);